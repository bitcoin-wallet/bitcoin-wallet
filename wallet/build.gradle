apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

dependencies {
    compile(project(':integration-android')) {
        exclude(group: 'com.google.android', module: 'android')
    }
    compile 'com.android.support:support-annotations:26.0.1'
    compile 'com.android.support:support-compat:26.0.1'
    compile('com.android.support:support-v13:26.0.1') {
        exclude(group: 'com.android.support', module: 'support-fragment')
        exclude(group: 'com.android.support', module: 'support-media-compat')
    }
    compile 'com.android.support:support-core-utils:26.0.1'
    compile 'com.android.support:recyclerview-v7:26.0.1'
    compile 'com.android.support:cardview-v7:26.0.1'
    compile 'org.bitcoinj:bitcoinj-core:0.14.4'
    compile 'com.google.protobuf:protobuf-java:2.6.1'
    compile 'com.google.guava:guava:20.0'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
    compile 'com.squareup.moshi:moshi:1.3.1'
    compile 'org.slf4j:slf4j-api:1.7.22'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude(group: 'com.google.android', module: 'android')
    }
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile 'com.google.code.findbugs:jsr305:2.0.3'
    testCompile 'junit:junit:4.12'
}

ext {
    archivesBaseName = 'bitcoin-wallet'
}

android {
    compileSdkVersion 'android-26'
    buildToolsVersion '26.0.1'

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        generatedDensities = ['hdpi', 'xhdpi']
    }

    buildTypes {
        all {
            minifyEnabled true
            proguardFile 'proguard.cfg'
        }
        debug {
            debuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        test {
            java.srcDirs = ['test']
            resources.srcDirs = ['test']
        }
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixPatterns.gwt.xml'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixType.gwt.xml'
        exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'org.bitcoin.production.checkpoints.txt'
        exclude 'org.bitcoin.test.checkpoints.txt'
        exclude 'messages.properties'
        exclude 'META-INF/services/sun.net.spi.nameservice.NameServiceDescriptor'
    }
}

task svgToPngMipmap(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('graphics/mipmap')
    to = file('res')
    targetedDensities = ['hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}
